# Default values for chasewhiterabbit.
# This is a YAML-formatted file.

replicaCount: 3

image:
  repository: docker.sxc.codes/chasewhiterabbit
  pullPolicy: Always
  tag: "latest"

imagePullSecrets:
  - name: docker-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80
  targetPort: http

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
  hosts:
    - host: chasewhiterabbit.sxc.codes
      paths:
        - path: /
          pathType: Prefix
    - host: api.chasewhiterabbit.sxc.codes
      paths:
        - path: /api
          pathType: Prefix
  tls:
    - secretName: chasewhiterabbit-tls
      hosts:
        - chasewhiterabbit.sxc.codes
        - api.chasewhiterabbit.sxc.codes

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 75
  # Advanced HPA metrics configuration
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
  # Custom metrics for requests per second
  customMetrics:
    enabled: true
    requestsPerSecond:
      targetValue: 100
      metricName: "nginx_ingress_controller_requests_rate"
    responseTime:
      targetValue: 100
      metricName: "http_request_duration_ms_p95"
  # Resource-based scaling thresholds
  metrics:
    cpu:
      targetAverageUtilization: 70
      targetAverageValue: "350m"
    memory:
      targetAverageUtilization: 75
      targetAverageValue: "384Mi"
    # Network-based scaling for high-traffic scenarios
    network:
      enabled: true
      targetPacketsPerSecond: 1000
      targetBytesPerSecond: "10Mi"

nodeSelector: {}

tolerations: []

affinity: {}

# Application configuration
config:
  nodeEnv: production
  port: 80
  
  monitoring:
    prometheus:
      enabled: true
      port: 9090
    grafana:
      url: "https://grafana.sxc.codes"
  
  logging:
    level: "info"
    format: "json"
    elasticsearch:
      host: "elastic.sxc.codes"
      port: 9200
      index: "chasewhiterabbit-logs"
  
  database:
    supabase:
      url: "https://supabase.sxc.codes"
  
  alerts:
    email:
      recipients:
        - "tiatheone@protonmail.com"
        - "garrett@sxc.codes"
        - "garrett.dillman@gmail.com"

# Dependencies
ingress-nginx:
  enabled: true
  controller:
    service:
      type: LoadBalancer

cert-manager:
  enabled: true
  installCRDs: true
